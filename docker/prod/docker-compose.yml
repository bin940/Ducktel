version: '3.8'

services:
  backend:
    image: myorg/ducktel-backend:latest
    restart: always
    ports:
      - "8090:8090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/Ducktel?useSSL=false
      SPRING_DATASOURCE_USERNAME: DucktelAdmin
      SPRING_DATASOURCE_PASSWORD: Ducktel123
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      - db
      - redis
      - kafka
      - minio

  frontend:
    image: myorg/ducktel-frontend:latest
    restart: always
    ports:
      - "80:80"

  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: Ducktel
      MYSQL_USER: DucktelAdmin
      MYSQL_PASSWORD: Ducktel123
    volumes:
      - db-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"


  kafka:
    image: bitnami/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_KRAFT_CLUSTER_ID: my-cluster-id
    volumes:
      - kafka-data:/bitnami/kafka

  minio:
    image: minio/minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"

volumes:
  db-data:
  minio-data:
