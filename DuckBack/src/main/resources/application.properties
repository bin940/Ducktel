spring.application.name=Ducktel

spring.datasource.url=jdbc:mysql://localhost:3306/duckhotel
spring.datasource.username=duckadmin
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

server.port=8090


# Spring Security
spring.security.user.name=admin
spring.security.user.password=admin123

# DevTools
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.additional-paths=src/main/java

#log level
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.com.ducktelback=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.boot.devtools=DEBUG

#minio
minio:
url: http://minio:9000
access-key: minioadmin
secret-key: minioadmin
bucket: hotel-images

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=1032567509724-ahogel3e4oeo24av77qdojm7dp5rb2bq.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=c0fbadf3cabc5996f91acf5d387bdf19
spring.security.oauth2.client.registration.kakao.client-secret=wHtBoR8Lsoi38gW1yr2kmtGudKNoGCUn
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth2
spring.security.oauth2.client.registration.naver.client-id=null
spring.security.oauth2.client.registration.naver.client-secret=null
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response